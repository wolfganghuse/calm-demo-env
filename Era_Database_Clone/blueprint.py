# THIS FILE IS AUTOMATICALLY GENERATED.
# Disclaimer: Please test this file before using in production.
"""
Generated blueprint DSL (.py)
"""

import json  # no_qa
import os  # no_qa

from calm.dsl.builtins import *  # no_qa


# Secret Variables
BP_CRED_db_server_creds_KEY = read_local_file("BP_CRED_db_server_creds_KEY")
BP_CRED_era_creds_PASSWORD = read_local_file("BP_CRED_era_creds_PASSWORD")
Profile_Default_variable_cloned_db_password = read_local_file(
    "Profile_Default_variable_cloned_db_password"
)

# Credentials
BP_CRED_db_server_creds = basic_cred(
    "era",
    BP_CRED_db_server_creds_KEY,
    name="db_server_creds",
    type="KEY",
    editables={"username": False, "secret": True},
)
BP_CRED_era_creds = basic_cred(
    "admin",
    BP_CRED_era_creds_PASSWORD,
    name="era_creds",
    type="PASSWORD",
    default=True,
)


class Clone(Service):

    REFRESH_OPERATION_ID = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=False, description=""
    )

    VALIDATED_SNAP_ID = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=False, description=""
    )


class Era_Cloned_DB(Substrate):

    os_type = "Linux"
    provider_type = "EXISTING_VM"
    provider_spec = read_provider_spec(
        os.path.join("specs", "Era_Cloned_DB_provider_spec.yaml")
    )

    readiness_probe = readiness_probe(
        connection_type="SSH",
        disabled=False,
        retries="5",
        connection_port=22,
        address="@@{ip_address}@@",
        delay_secs="60",
        credential=ref(BP_CRED_db_server_creds),
    )

    @action
    def __pre_create__():

        CalmTask.SetVariable.escript(
            name="1GetDbHostInfo",
            filename=os.path.join(
                "scripts",
                "Substrate_Era_Cloned_DB_Action___pre_create___Task__1GetDbHostInfo.py",
            ),
            target=ref(Era_Cloned_DB),
            variables=["TM_ID", "SOURCE_DBSERVER_ID"],
        )
        CalmTask.SetVariable.escript(
            name="2ValidateSnapID",
            filename=os.path.join(
                "scripts",
                "Substrate_Era_Cloned_DB_Action___pre_create___Task__2ValidateSnapID.py",
            ),
            target=ref(Era_Cloned_DB),
            variables=["VALIDATED_SNAP_ID"],
        )
        CalmTask.SetVariable.escript(
            name="3GetInputFile",
            filename=os.path.join(
                "scripts",
                "Substrate_Era_Cloned_DB_Action___pre_create___Task__3GetInputFile.py",
            ),
            target=ref(Era_Cloned_DB),
            variables=["VM_NAME", "WORKING_DIR", "ERA_BASE"],
        )
        CalmTask.SetVariable.escript(
            name="4GetProfileIDs",
            filename=os.path.join(
                "scripts",
                "Substrate_Era_Cloned_DB_Action___pre_create___Task__4GetProfileIDs.py",
            ),
            target=ref(Era_Cloned_DB),
            variables=["COMPUTE_PROFILE_ID", "NETWORK_PROFILE_ID", "DB_PROFILE_ID"],
        )
        CalmTask.SetVariable.escript(
            name="5CloneDb",
            filename=os.path.join(
                "scripts",
                "Substrate_Era_Cloned_DB_Action___pre_create___Task__5CloneDb.py",
            ),
            target=ref(Era_Cloned_DB),
            variables=["CLONE_OPERATION_ID"],
        )
        CalmTask.SetVariable.escript(
            name="6MonitorOperation",
            filename=os.path.join(
                "scripts",
                "Substrate_Era_Cloned_DB_Action___pre_create___Task__6MonitorOperation.py",
            ),
            target=ref(Era_Cloned_DB),
            variables=["CLONE_ENTITY_NAME"],
        )
        CalmTask.SetVariable.escript(
            name="7GetDatabaseInfo",
            filename=os.path.join(
                "scripts",
                "Substrate_Era_Cloned_DB_Action___pre_create___Task__7GetDatabaseInfo.py",
            ),
            target=ref(Era_Cloned_DB),
            variables=["CLONE_SERVER_IP", "CLONE_ID", "CLONE_SERVER_ID"],
        )

    @action
    def __post_delete__():

        CalmTask.SetVariable.escript(
            name="1CleanupDB",
            filename=os.path.join(
                "scripts",
                "Substrate_Era_Cloned_DB_Action___post_delete___Task__1CleanupDB.py",
            ),
            target=ref(Era_Cloned_DB),
            variables=["CLEANUP_OPERATION_ID"],
        )
        CalmTask.Exec.escript(
            name="2MonitorCleanupOp",
            filename=os.path.join(
                "scripts",
                "Substrate_Era_Cloned_DB_Action___post_delete___Task__2MonitorCleanupOp.py",
            ),
            target=ref(Era_Cloned_DB),
        )
        CalmTask.SetVariable.escript(
            name="3DeregisterDBServer",
            filename=os.path.join(
                "scripts",
                "Substrate_Era_Cloned_DB_Action___post_delete___Task__3DeregisterDBServer.py",
            ),
            target=ref(Era_Cloned_DB),
            variables=["DEREGISTER_OPERATION_ID"],
        )
        CalmTask.Exec.escript(
            name="4MonitorDeregOp",
            filename=os.path.join(
                "scripts",
                "Substrate_Era_Cloned_DB_Action___post_delete___Task__4MonitorDeregOp.py",
            ),
            target=ref(Era_Cloned_DB),
        )


class Package2(Package):

    services = [ref(Clone)]


class f6be2786_deployment(Deployment):

    min_replicas = "1"
    max_replicas = "1"
    default_replicas = "1"

    packages = [ref(Package2)]
    substrate = ref(Era_Cloned_DB)


class Default(Profile):

    deployments = [f6be2786_deployment]

    source_db_name = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    source_snapshot_id = CalmVariable.Simple(
        "", label="", is_mandatory=False, is_hidden=False, runtime=True, description=""
    )

    cloned_db_name = CalmVariable.Simple(
        "", label="", is_mandatory=True, is_hidden=False, runtime=True, description=""
    )

    cloned_db_password = CalmVariable.Simple.Secret(
        Profile_Default_variable_cloned_db_password,
        label="",
        is_mandatory=False,
        is_hidden=False,
        runtime=True,
        description="",
    )

    era_ip = CalmVariable.Simple(
        "10.200.100.176",
        label="",
        is_mandatory=False,
        is_hidden=False,
        runtime=True,
        description="",
    )

    @action
    def GetParentSnapshotList(name="Get Parent Snapshot List"):
        """Run this action to get a list of Snapshot times and IDs of the clone's parent."""

        CalmTask.Exec.escript(
            name="1GetSnapshotList",
            filename=os.path.join(
                "scripts",
                "Profile_Default_Action_GetParentSnapshotList_Task__1GetSnapshotList.py",
            ),
            target=ref(Clone),
        )

    @action
    def RefreshClone(name="Refresh Clone"):
        """Run this action to refresh your database clone to a newer snapshot.  Optionally specify a snapshot ID, if left blank, the clone will be refreshed to the most recent snapshot."""

        source_snapshot_id = CalmVariable.Simple(
            "",
            label="",
            is_mandatory=False,
            is_hidden=False,
            runtime=True,
            description="",
        )
        CalmTask.SetVariable.escript(
            name="1ValidateSnapID",
            filename=os.path.join(
                "scripts",
                "Profile_Default_Action_RefreshClone_Task__1ValidateSnapID.py",
            ),
            target=ref(Clone),
            variables=["VALIDATED_SNAP_ID"],
        )
        CalmTask.SetVariable.escript(
            name="2RefreshClone",
            filename=os.path.join(
                "scripts", "Profile_Default_Action_RefreshClone_Task__2RefreshClone.py"
            ),
            target=ref(Clone),
            variables=["REFRESH_OPERATION_ID"],
        )
        CalmTask.Exec.escript(
            name="3MonitorOperation",
            filename=os.path.join(
                "scripts",
                "Profile_Default_Action_RefreshClone_Task__3MonitorOperation.py",
            ),
            target=ref(Clone),
        )


class EraDatabaseClone(Blueprint):

    services = [Clone]
    packages = [Package2]
    substrates = [Era_Cloned_DB]
    profiles = [Default]
    credentials = [BP_CRED_db_server_creds, BP_CRED_era_creds]
