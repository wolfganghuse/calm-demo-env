# THIS FILE IS AUTOMATICALLY GENERATED.
# Disclaimer: Please test this file before using in production.
"""
Generated blueprint DSL (.py)
"""

import json  # no_qa
import os  # no_qa

from calm.dsl.builtins import *  # no_qa


# Secret Variables
BP_CRED_forti_admin_PASSWORD = read_local_file("BP_CRED_forti_admin_PASSWORD")
Profile_Default_variable_phpIPAM_token = read_local_file(
    "Profile_Default_variable_phpIPAM_token"
)

# Credentials
BP_CRED_forti_admin = basic_cred(
    "admin",
    BP_CRED_forti_admin_PASSWORD,
    name="forti_admin",
    type="PASSWORD",
    default=True,
)


class Service1(Service):

    pass


class forticalm_timeResources(AhvVmResources):

    memory = 2
    vCPUs = 1
    cores_per_vCPU = 1
    disks = [
        AhvVmDisk.Disk.Scsi.cloneFromImageService("CentOS7", bootable=True),
        AhvVmDisk.Disk.Scsi.allocateOnStorageContainer(32),
    ]
    nics = [
        AhvVmNic.NormalNic.ingress("NTNX-DEMO01_IPAM", cluster="NTNX-DEMO01"),
        AhvVmNic.NormalNic.ingress("demo-tenant01", cluster="NTNX-DEMO01"),
    ]

    guest_customization = AhvVmGC.CloudInit(
        filename=os.path.join("specs", "forticalm_time_cloud_init_data.yaml")
    )


class forticalm_time(AhvVm):

    name = "forti-@@{calm_time}@@"
    resources = forticalm_timeResources


class VM1(Substrate):

    os_type = "Linux"
    provider_type = "AHV_VM"
    provider_spec = forticalm_time

    readiness_probe = readiness_probe(
        connection_type="SSH",
        disabled=True,
        retries="5",
        connection_port=22,
        address="@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@",
        delay_secs="60",
    )

    @action
    def __pre_create__():

        CalmTask.SetVariable.escript(
            name="Get free IP",
            filename=os.path.join(
                "scripts", "Substrate_VM1_Action___pre_create___Task_GetfreeIP.py"
            ),
            target=ref(VM1),
            variables=["phpipam_free_ip"],
        )

    @action
    def __post_delete__():

        CalmTask.HTTP.delete(
            "https://@@{phpIPAM_address}@@/api/Calm/addresses/@@{address}@@/@@{phpIPAM_section}@@",
            body=json.dumps({}),
            headers={"Token": "@@{phpIPAM_token}@@", "Accept": "application/json"},
            secret_headers={},
            content_type="application/json",
            verify=False,
            status_mapping={200: True},
            response_paths={},
            name="Release IP",
            target=ref(VM1),
        )


class Package1(Package):

    services = [ref(Service1)]


class _50a4b753_deployment(Deployment):

    name = "50a4b753_deployment"
    min_replicas = "1"
    max_replicas = "1"
    default_replicas = "1"

    packages = [ref(Package1)]
    substrate = ref(VM1)


class Default(Profile):

    deployments = [_50a4b753_deployment]

    phpIPAM_section = CalmVariable.Simple(
        "8", label="", is_mandatory=False, is_hidden=True, runtime=False, description=""
    )

    phpIPAM_address = CalmVariable.Simple(
        "10.200.100.160",
        label="",
        is_mandatory=False,
        is_hidden=True,
        runtime=False,
        description="",
    )

    phpIPAM_token = CalmVariable.Simple.Secret(
        Profile_Default_variable_phpIPAM_token,
        label="",
        is_mandatory=False,
        is_hidden=True,
        runtime=False,
        description="",
    )


class FortiGateVM(Blueprint):

    services = [Service1]
    packages = [Package1]
    substrates = [VM1]
    profiles = [Default]
    credentials = [BP_CRED_forti_admin]


class BpMetadata(Metadata):

    categories = {"TemplateType": "Vm"}
